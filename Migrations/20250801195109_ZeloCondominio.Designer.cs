// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zelo.Context;

#nullable disable

namespace Zelo.Migrations
{
    [DbContext(typeof(CondominioContext))]
    [Migration("20250801195109_ZeloCondominio")]
    partial class ZeloCondominio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Zelo.Entities.Apartamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bloco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Situacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Apartamentos");
                });

            modelBuilder.Entity("Zelo.Entities.Morador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoMorador")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartamentoId")
                        .IsUnique();

                    b.ToTable("Moradores");
                });

            modelBuilder.Entity("Zelo.Entities.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVaga")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartamentoId");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("Zelo.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MoradorId")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MoradorId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Zelo.Entities.Morador", b =>
                {
                    b.HasOne("Zelo.Entities.Apartamento", "Apartamento")
                        .WithOne("Morador")
                        .HasForeignKey("Zelo.Entities.Morador", "ApartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartamento");
                });

            modelBuilder.Entity("Zelo.Entities.Vaga", b =>
                {
                    b.HasOne("Zelo.Entities.Apartamento", "Apartamento")
                        .WithMany("Vagas")
                        .HasForeignKey("ApartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartamento");
                });

            modelBuilder.Entity("Zelo.Entities.Veiculo", b =>
                {
                    b.HasOne("Zelo.Entities.Morador", "Morador")
                        .WithMany("Veiculos")
                        .HasForeignKey("MoradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Morador");
                });

            modelBuilder.Entity("Zelo.Entities.Apartamento", b =>
                {
                    b.Navigation("Morador");

                    b.Navigation("Vagas");
                });

            modelBuilder.Entity("Zelo.Entities.Morador", b =>
                {
                    b.Navigation("Veiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
